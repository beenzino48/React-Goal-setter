{"ast":null,"code":"var _jsxFileName = \"/home/hamish/code/beenzino48/dotfiles/01-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js\",\n  _s = $RefreshSig$();\nimport React, { isValidElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./CourseInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n  & label {\n    font-weight: bold;\n    display: block;\n    margin-bottom: 0.5rem;\n        /* Changes the css if user input is invalid */\n    color: ${props => props.invalid ? 'red' : 'black'}\n  }\n\n  & input {\n    display: block;\n    width: 100%;\n    /* Changes the css if user input is invalid */\n    border: 1px solid ${props => props.invalid ? \"red\" : \"#ccc\"};\n    background: ${props => props.invalid ? \"#ffd7d7\" : \"transparent\"};\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n\n  & input:focus {\n    outline: none;\n    background: #fad0ec;\n    border-color: #8b005d;\n  }\n`;\n_c = FormControl;\nconst CourseInput = props => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  // useState for invalid user input\n\n  const [isValid, SetIsValid] = useState(true);\n  const goalInputChangeHandler = event => {\n    // trim checks for white space when inputted\n    // reset error colors if input is valid\n    if (event.target.value.trim().length > 0) {\n      SetIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    // checks if user input is empty\n    // enteredValue is the prev state for the user input form (should be empty)\n    if (enteredValue.length === 0) {\n      return SetIsValid(false);\n    }\n    props.onAddGoal(enteredValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      invalid: !isValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseInput, \"6i8/BbY4BkL2YXO+QzCApbBZlqI=\");\n_c2 = CourseInput;\nexport default CourseInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"CourseInput\");","map":{"version":3,"names":["React","isValidElement","useState","styled","Button","styles","FormControl","div","props","invalid","CourseInput","enteredValue","setEnteredValue","isValid","SetIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal"],"sources":["/home/hamish/code/beenzino48/dotfiles/01-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js"],"sourcesContent":["import React, { isValidElement, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./CourseInput.module.css\";\n\nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n  & label {\n    font-weight: bold;\n    display: block;\n    margin-bottom: 0.5rem;\n        /* Changes the css if user input is invalid */\n    color: ${props => (props.invalid ? 'red' : 'black')}\n  }\n\n  & input {\n    display: block;\n    width: 100%;\n    /* Changes the css if user input is invalid */\n    border: 1px solid ${props => (props.invalid ? \"red\" : \"#ccc\")};\n    background: ${props => (props.invalid ? \"#ffd7d7\" : \"transparent\" )};\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n\n  & input:focus {\n    outline: none;\n    background: #fad0ec;\n    border-color: #8b005d;\n  }\n`;\n\nconst CourseInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  // useState for invalid user input\n\n  const [isValid, SetIsValid] = useState(true);\n\n  const goalInputChangeHandler = (event) => {\n    // trim checks for white space when inputted\n    // reset error colors if input is valid\n    if (event.target.value.trim().length > 0) {\n      SetIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    // checks if user input is empty\n    // enteredValue is the prev state for the user input form (should be empty)\n    if (enteredValue.length === 0) {\n      return SetIsValid(false);\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      {/* takes the css from the styled component set above */}\n      {/* if invalid set the css for FormControl component as invalid */}\n      <FormControl invalid={!isValid}>\n        <label>Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n      </FormControl>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,cAAc,EAAEC,QAAQ,QAAQ,OAAO;AACvD,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,MAAM,MAAM,0BAA0B;AAAC;AAE9C,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaC,KAAK,IAAKA,KAAK,CAACC,OAAO,GAAG,KAAK,GAAG,OAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBD,KAAK,IAAKA,KAAK,CAACC,OAAO,GAAG,KAAK,GAAG,MAAQ;AAClE,kBAAkBD,KAAK,IAAKA,KAAK,CAACC,OAAO,GAAG,SAAS,GAAG,aAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KA3BIH,WAAW;AA6BjB,MAAMI,WAAW,GAAIF,KAAK,IAAK;EAAA;EAC7B,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD;;EAEA,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMa,sBAAsB,GAAIC,KAAK,IAAK;IACxC;IACA;IACA,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,EAAE;MACxCN,UAAU,CAAC,IAAI,CAAC;IAClB;IACAF,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMG,iBAAiB,GAAIL,KAAK,IAAK;IACnCA,KAAK,CAACM,cAAc,EAAE;IACtB;IACA;IACA,IAAIX,YAAY,CAACS,MAAM,KAAK,CAAC,EAAE;MAC7B,OAAON,UAAU,CAAC,KAAK,CAAC;IAC1B;IACAN,KAAK,CAACe,SAAS,CAACZ,YAAY,CAAC;EAC/B,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEU,iBAAkB;IAAA,wBAGhC,QAAC,WAAW;MAAC,OAAO,EAAE,CAACR,OAAQ;MAAA,wBAC7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAC1B;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEE;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C,eACd,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEX,CAAC;AAAC,GApCIL,WAAW;AAAA,MAAXA,WAAW;AAsCjB,eAAeA,WAAW;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}